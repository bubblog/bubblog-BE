# 개발환경 도커 컴포즈

# 로컬 개발 환경을 위한 서비스 정의
services:
  # 로컬 Redis
  redis:
    image: redis:latest
    container_name: bubblog-local-redis # 운영 환경과의 충돌 방지를 위해 이름 명시
    ports:
      - "6379:6379"
    volumes:
      - redis_data_local:/data

  # 로컬 Kafka
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: bubblog-local-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1    # Kafka 클러스터 내에서 각 노드를 식별하는 고유 ID
      - KAFKA_CFG_PROCESS_ROLES=broker,controller  # 이 Kafka 노드가 수행할 역할을 지정. 브로커(메세지 관리) 겸 컨트롤러(클러스터 관리)
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER   # 컨트롤러(관리자)용 통신에 사용되는 리스너 채널 이름 지정
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT   # 여러 broker 노드들끼리 서로 통신할 때 사용할 통신 채널의 이름
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093  #  1@kafka:9093 : 'ID가 1이고 주소가 kafka:9093인 노드가 투표권을 가진다.'
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true   # 존재하지 않는 토픽(Topic)으로 메시지를 보냈을 때 토픽을 자동으로 생성할지 여부
    volumes:
      - kafka_data_local:/bitnami/kafka
# 데이터 유지를 위한 로컬 볼륨
volumes:
  redis_data_local:
  kafka_data_local: