name: CI/CD Deploy with Compose

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t mdy3722/bubblog-springboot:latest .

      - name: Login tname: CI/CD Deploy with Compose

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t mdy3722/bubblog-springboot:latest .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push mdy3722/bubblog-springboot:latest

      - name: Deploy to EC2 with Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app  # 이 디렉토리에 docker-compose.yml 있어야 함
            
            docker pull mdy3722/bubblog-springboot:latest
            
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" > .env
            echo "DB_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
            echo "REDIS_PORT=${{ secrets.REDIS_POST }}" >> .env
            
            docker-compose down || true
            docker-compose up -d
  o Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push mdy3722/bubblog-springboot:latest

      - name: Deploy to EC2 with Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app  # 이 디렉토리에 docker-compose.yml 있어야 함
            
            docker pull mdy3722/bubblog-springboot:latest
            
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" > .env
            echo "DB_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
            echo "REDIS_PORT=${{ secrets.REDIS_POST }}" >> .env
            
            docker-compose down || true
            docker-compose up -d
